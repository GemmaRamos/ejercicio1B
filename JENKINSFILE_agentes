pipeline {
    agent any

    stages {
        stage('Get Code') {
            steps {
                script {
                    bat 'hostname'
                    bat 'whoami'
                    bat 'echo %WORKSPACE%'
                    // Obtener código del repositorio y stash
                    git 'https://github.com/GemmaRamos/ejercicio1A.git'
                    stash name: 'code', includes: '**/*'
                }
            }
        }

        stage('Functional Tests') {
            parallel {
                stage('Unit') {
                    agent {
                        label 'agente-secundario-1'
                    }
                    steps {
                        bat 'hostname'
                        bat 'whoami'
                        bat 'echo %WORKSPACE%'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            // Unstash del código y ejecución de Unit tests
                            unstash name: 'code'
                            bat '''
                                set PYTHONPATH=%WORKSPACE%
                                pytest --junitxml=result-unit.xml test\\unit
                            '''
                            junit 'result-unit.xml'
                       }
                    }
                }

                stage('Rest') {
                    agent {
                        label 'agente-secundario-2'
                    }
                    steps {
                        bat 'hostname'
                        bat 'whoami'
                        bat 'echo %WORKSPACE%'
                        // Unstash del código y ejecución de pruebas de integración REST
                        unstash name: 'code'
                        bat '''
                            set FLASK_APP=app\\api.py
                            set FLASK_ENV=development
                            start flask run
                            start java -jar C:\\Users\\gemma.ramos\\Desktop\\UNIR-DevOps\\Ejercicio1\\wiremock\\wiremock-standalone-3.3.1.jar --port 9090 --root-dir C:\\Users\\gemma.ramos\\Desktop\\UNIR-DevOps\\Ejercicio1\\wiremock
                            set PYTHONPATH=%WORKSPACE%
                            pytest --junitxml=result-rest.xml test\\rest
                        '''
                        junit 'result-rest.xml'
                    }
                }

                stage('Coverage'){
                    agent {
                        label 'agente-secundario-3'
                    }
                    steps {
                        bat 'hostname'
                        bat 'whoami'
                        bat 'echo %WORKSPACE%'
                        // Unstash del código y ejecución de pruebas de cobertura
                        unstash name: 'code'
                        bat '''
                            coverage run --branch --source=app --omit=app\\__init__.py,app\\api.py -m pytest test\\unit
                            coverage xml
                        '''
                        cobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '100,80,90', lineCoverageTargets: '100,85,95', failUnstable: false, onlyStable: false

                    }
                }

            }
        }

        stage('Non Functional Tests') {
            parallel {
                agent {
                    label 'agente-secundario-1'
                }
                stage('Static'){
                    steps {
                        bat 'hostname'
                        bat 'whoami'
                        bat 'echo %WORKSPACE%'
                        // Unstash del código y ejecución de análisis estático
                        unstash name: 'code'
                        bat '''
                            flake8 --exit-zero --format=pylint  app >flake8.out
                        '''
                        recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], qualityGates: [[threshold: 8, type: 'TOTAL', unstable: true], [threshold: 10, type: 'TOTAL', unstable: false]]
                    }
                }

                stage('Security'){
                    agent {
                        label 'agente-secundario-2'
                    }
                    steps {
                        bat 'hostname'
                        bat 'whoami'
                        bat 'echo %WORKSPACE%'
                        // Unstash del código y ejecución de pruebas de seguridad
                        unstash name: 'code'
                        bat '''
                            set FLASK_APP=app\\api.py
                            set FLASK_ENV=development
                            start flask run
                            bandit --exit-zero -r . -f custom -o bandit.out --severity-level medium --msg-template "{abspath}:{line}: [{test_id}] {msg}“
                        '''
                        recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')], qualityGates: [[threshold: 2, type: 'TOTAL', unstable: true], [threshold: 4, type: 'TOTAL', unstable: false]]
                    }
                }

                stage('Performance'){
                    agent {
                        label 'agente-secundario-3'
                    }
                    steps {
                        bat 'hostname'
                        bat 'whoami'
                        bat 'echo %WORKSPACE%'
                        // Unstash del código y ejecución de pruebas de rendimiento
                        unstash name: 'code'
                        bat '''
                            C:\\Users\\gemma.ramos\\Desktop\\UNIR-DevOps\\Ejercicio1B\\JMeter\\apache-jmeter-5.6.2\\apache-jmeter-5.6.2\\bin\\jmeter -n -t test\\jmeter\\flask.jmx -f -l flask.jtl
                        '''
                       perfReport sourceDataFiles: 'flask.jtl'
                    }
                }

            }
        }

        stage('Clean Workspace') {
            steps {
                script {
                    bat 'echo Limpiando el workspace...'
                    deleteDir() // Esta función borra el workspace
                }
            }
        }
    }
}
